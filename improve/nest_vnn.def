Bootstrap: docker
From: pytorch/pytorch:1.8.1-cuda11.1-cudnn8-runtime


%labels
	MANTAINER Rohan Gnanaolivu

%setup
    # temporarily put these touch commands
    # in post calls
	# cp ./improve/Singularity_gpu_fix.sh $SINGULARITY_ROOTFS
	# add local url of this repository for testing

%environment
	PATH=$PATH:/usr/local/nest_vnn
	MODEL_DIR=/usr/local/nest_vnn
	CANDLE_DATA_DIR=/candle_data_dir

%post
	apt-get update -y
	apt-get install wget -y
	apt-get install build-essential -y
	apt-get install git -y
	apt-get install vim -y
	apt-get install subversion -y

	# install gpu fix and clean up
	# Fix for nv mounting in a legacy version of Singularity
    cd /
    touch /usr/bin/nvidia-smi
    touch /usr/bin/nvidia-smi
    touch /usr/bin/nvidia-debugdump
    touch /usr/bin/nvidia-persistenced
    touch /usr/bin/nvidia-cuda-mps-control
    touch /usr/bin/nvidia-cuda-mps-server
    mkdir /run/nvidia-persistenced/
    touch /run/nvidia-persistenced/socket

        # these three need to be compiled and linked to the cuda libs.
        # at the moment, what works for me is to build these in a
        # singularity shell in a sandbox with the --nv flag to singularity set.


	# create default internal candle_data_dir, map external candle_data_dir here
	mkdir /candle_data_dir

	#install python modules and model prerequites
	pip install --upgrade pip
	python3 -m pip install torchvision==0.9.1=py38_cu111 torchaudio==0.8.0=py38 torchme--extra-index-url https://download.pytorch.org/whl/cu111
	python3 -m pip install optuna
	python3 -m pip install networkx
	python3 -m pip install scikit-learn
	python3 -m pip install pandas
	python3 -m pip install git+https://github.com/ECP-CANDLE/candle_lib@develop

	cd /usr/local
	git clone --branch improve https://github.com/idekerlab/nest_vnn.git
	cd nest_vnn

	chmod a+x *.sh
	chmod a+x *.py
	chmod -R 777 *.py
